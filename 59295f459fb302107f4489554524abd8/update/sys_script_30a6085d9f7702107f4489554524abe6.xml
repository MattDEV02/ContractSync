<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_cdltd_contractsy_contract_request</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Validate Contract Start and end Date</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {

    function datesDifferenceInMs(glideDate1, glideDate2) {
        return Math.abs(glideDate2.getNumericValue() - glideDate1.getNumericValue());
    }

    function numericDateMsToDays(numericDate) {
        return Math.floor(numericDate / (1000 * 60 * 60 * 24));
    }

    function reverseDatesSubmit() {
		current.setAbortAction(true);
        current.u_start_date = null;
        current.u_end_date = null;
		current.update();
    }

    // Validate Contract Start and end Date

    var startDate = current.u_start_date;
    var endDate = current.u_end_date;

    var gdStartDate = new GlideDateTime(startDate);
    var gdEndDate = new GlideDateTime(endDate);
    var gdToday = new GlideDateTime();

    var endStartDatesDifferenceInMs = datesDifferenceInMs(gdStartDate, gdEndDate);
    var endStartDatesDifferenceInDays = numericDateMsToDays(endStartDatesDifferenceInMs);

    var startTodayDatesDifferenceInMs = datesDifferenceInMs(gdToday, gdStartDate);
    var startTodayDatesDifferenceInDays = numericDateMsToDays(startTodayDatesDifferenceInMs);
   
    var minEndStartDatesDifferenceInDays = gs.getProperty("x_cdltd_contractsy.contract.minDatesDifferenceInDays", 60);
	
	    var overdueDaysBeforeStartDate = gs.getProperty("x_cdltd_contractsy.contract.overdue.daysBeforeStartDate", 14);

    if (startTodayDatesDifferenceInDays <= overdueDaysBeforeStartDate) {
        gs.addErrorMessage("Error: Start date must be after today.");
		reverseDatesSubmit();
		
    } 
	
	if (endStartDatesDifferenceInDays < minEndStartDatesDifferenceInDays) {
        gs.addErrorMessage("Error: The minimum distance between the start and end date of the contract is 2 months, i.e. " + minEndStartDatesDifferenceInDays + " days.");
		reverseDatesSubmit();
    }

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-08-02 12:14:25</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>30a6085d9f7702107f4489554524abe6</sys_id>
        <sys_mod_count>31</sys_mod_count>
        <sys_name>Validate Contract Start and end Date</sys_name>
        <sys_overrides/>
        <sys_package display_value="ContractSync" source="x_cdltd_contractsy">59295f459fb302107f4489554524abd8</sys_package>
        <sys_policy/>
        <sys_scope display_value="ContractSync">59295f459fb302107f4489554524abd8</sys_scope>
        <sys_update_name>sys_script_30a6085d9f7702107f4489554524abe6</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-08-15 10:35:16</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=30a6085d9f7702107f4489554524abe6"/>
</record_update>
